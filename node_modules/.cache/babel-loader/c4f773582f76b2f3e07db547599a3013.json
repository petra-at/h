{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\petra\\\\Desktop\\\\face-detections\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Particles from 'react-particles-js';\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 30\n    },\n    line_linked: {\n      shadow: {\n        enable: true,\n        color: \"#3CA9D1\",\n        blur: 5\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageURL: '',\n  box: {},\n  route: 'signin',\n  signedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.username,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const face = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputImage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        topRow: face.top_row * height,\n        leftCol: face.left_col * width,\n        bottomRow: height - face.bottom_row * height,\n        rightCol: width - face.right_col * width\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      this.setState({\n        imageURL: this.state.input\n      });\n\n      if (this.state.input) {\n        fetch('https://face-detectionclarifai.herokuapp.com/imageurl', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            input: this.state.input\n          })\n        }).then(response => response.json()).then(response => {\n          if (response) {\n            fetch('https://face-detectionclarifai.herokuapp.com/image', {\n              method: 'PUT',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                id: this.state.user.id\n              })\n            }).then(response => response.json()).then(count => {\n              this.setState(Object.assign(this.state.user, {\n                entries: count\n              }));\n            }).catch(err => console.log(err));\n          }\n\n          this.displayFaceBox(this.calculateFaceLocation(response));\n        }).catch(err => console.log(\"Error: \", err));\n      }\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signin') {\n        this.setState(initialState); // when back out sign out clear state\n      } else if (route === 'home') {\n        this.setState({\n          signedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageURL: '',\n      box: {},\n      route: 'signin',\n      signedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: particleOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      onRouteChange: this.onRouteChange,\n      signIn: this.state.signedIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }), this.state.route === 'home' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      box: this.state.box,\n      imageURL: this.state.imageURL,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 15\n      }\n    })) : this.state.route === 'signin' ? /*#__PURE__*/React.createElement(SignIn, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/petra/Desktop/face-detections/src/App.js"],"names":["React","Component","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","SignIn","Register","Particles","particleOptions","particles","number","value","line_linked","shadow","enable","color","blur","initialState","input","imageURL","box","route","signedIn","user","id","name","email","entries","joined","App","constructor","loadUser","data","setState","username","calculateFaceLocation","face","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","topRow","top_row","leftCol","left_col","bottomRow","bottom_row","rightCol","right_col","displayFaceBox","onInputChange","event","target","onSubmit","state","fetch","method","headers","body","JSON","stringify","then","response","json","count","Object","assign","catch","err","console","log","onRouteChange","render"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\r\nimport './App.css';\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport Logo from './components/Logo/Logo';\r\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\r\nimport Rank from './components/Rank/Rank';\r\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\r\nimport SignIn from './components/SignIn/SignIn';\r\nimport Register from './components/Register/Register';\r\nimport Particles from 'react-particles-js';\r\n\r\nconst particleOptions={\r\n  particles: {\r\n    number:{\r\n      value:30,\r\n    },\r\n    line_linked: {\r\n      shadow: {\r\n        enable: true,\r\n        color: \"#3CA9D1\",\r\n        blur: 5\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst initialState = {\r\n    input:'',\r\n    imageURL:'',\r\n    box:{},\r\n    route:'signin',\r\n    signedIn:false,\r\n    user:{\r\n        id:'',\r\n        name:'',\r\n        email:'',\r\n        entries:0,\r\n        joined:''\r\n\r\n    }\r\n}\r\n\r\n class App extends Component {\r\n    constructor()\r\n    {\r\n      super();\r\n      this.state ={\r\n        input:'',\r\n        imageURL:'',\r\n        box:{},\r\n        route:'signin',\r\n        signedIn:false,\r\n        user:{\r\n            id:'',\r\n            name:'',\r\n            email:'',\r\n            entries:0,\r\n            joined:''\r\n\r\n        }\r\n      }\r\n    }\r\n\r\n    loadUser=(data)=>{\r\n        this.setState({\r\n            user:{\r\n                id:data.id,\r\n                name:data.username,\r\n                email:data.email,\r\n                entries:data.entries,\r\n                joined:data.joined\r\n            }\r\n        })\r\n     }\r\n\r\n    calculateFaceLocation=(data)=>{\r\n        const face = data.outputs[0].data.regions[0].region_info.bounding_box;    \r\n        const image = document.getElementById('inputImage');\r\n        const width = Number(image.width);\r\n        const height = Number(image.height);\r\n\r\n        return {\r\n          topRow: face.top_row * height,\r\n          leftCol: face.left_col * width,\r\n          bottomRow: height - (face.bottom_row * height),\r\n          rightCol: width - (face.right_col * width)\r\n        }\r\n      }\r\n    \r\n    displayFaceBox =(box)=>{\r\n        this.setState({box:box})\r\n      }\r\n    \r\n    onInputChange =(event)=>{\r\n          this.setState({input:event.target.value});\r\n      }\r\n    \r\n    onSubmit = ()=>\r\n        {\r\n          this.setState({imageURL: this.state.input});\r\n       \r\n          if(this.state.input)\r\n          {\r\n            fetch('https://face-detectionclarifai.herokuapp.com/imageurl',{\r\n                method:'POST',\r\n                headers:{'Content-Type':'application/json'},\r\n                body:JSON.stringify({\r\n                    input:this.state.input\r\n                })\r\n            }).then(response=>response.json())\r\n            .then(response => {\r\n                if(response)\r\n                {\r\n                    fetch('https://face-detectionclarifai.herokuapp.com/image',{\r\n                        method:'PUT',\r\n                        headers:{'Content-Type':'application/json'},\r\n                        body:JSON.stringify({\r\n                            id:this.state.user.id\r\n                        })\r\n                    })\r\n                    .then(response=>response.json())\r\n                    .then(count=>{\r\n                        this.setState(Object.assign(this.state.user,{entries:count}))\r\n                    })\r\n                    .catch(err=>console.log(err)); \r\n                }\r\n                this.displayFaceBox(this.calculateFaceLocation(response))\r\n            })\r\n            .catch(err=>console.log(\"Error: \",err));\r\n          }\r\n      }\r\n    \r\n    \r\n    onRouteChange = (route)=>{\r\n          if(route==='signin'){\r\n            this.setState(initialState); // when back out sign out clear state\r\n          }\r\n          else if(route==='home')\r\n          {\r\n            this.setState({signedIn:true}); \r\n          }\r\n          this.setState({route:route}); \r\n      }\r\n    \r\n      render(){\r\n       \r\n      return (\r\n        <div className=\"App\">\r\n          <Particles className='particles' params={particleOptions}/>\r\n          <Navigation onRouteChange={this.onRouteChange} signIn={this.state.signedIn}/>\r\n      {\r\n        \r\n        this.state.route ==='home' ?\r\n        <div>\r\n              <Logo  /> \r\n              <Rank name={this.state.user.name} entries={this.state.user.entries}/>\r\n              <ImageLinkForm \r\n                onInputChange = {(this.onInputChange)} \r\n                onButtonSubmit={this.onSubmit}\r\n              /> \r\n              <FaceRecognition box={this.state.box} imageURL={this.state.imageURL}/> \r\n        </div>\r\n        :(\r\n          this.state.route === 'signin'\r\n          ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange}/> \r\n          : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\r\n        )\r\n        }  \r\n      \r\n        </div>\r\n      );\r\n    }\r\n    }\r\n    \r\n    export default App;\r\n"]},"metadata":{},"sourceType":"module"}